{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","require","loadGoogleMapsApi","libraries","then","googleMaps","map","autocomplete","places","selectors","document","getElementById","moreBtn","getNextPage","selectedPlaceType","placeMarker","placeFound","infos","iconPath","placeType","bars","types","icon","concat","hotels","attr","markers","hostnameRegexp","RegExp","$","click","disabled","_this","this","parentList","parent","parentLi","target","hasClass","clearMarkers","clearResults","search","find","removeClass","addClass","onPlaceChanged","place","getPlace","geometry","panTo","location","setZoom","placeholder","bounds","getBounds","nearbySearch","results","status","pagination","PlacesServiceStatus","OK","forEach","Marker","position","animation","Animation","DROP","setTimeout","dropMarker","addResult","showInfoWindow","place_id","hasNextPage","nextPage","append","btnContent","button","createElement","classList","add","onclick","event","trigger","placeRating","rating","innerHTML","out","marker","placeID","windowInfo","InfoWindow","maxWidth","addListener","getDetails","placeId","closeInfoWindow","highlightNavigation","setContent","buildInfoContent","open","getMap","navItems","each","scrollContainer","topPos","top","animate","scrollTop","infoContent","vicinity","international_phone_number","phone","website","exec","set","close","setMap","html","Map","center","lat","lng","mapTypeControl","panControl","zoomControl","streetViewControl","zoom","Autocomplete","PlacesService","catch","error","console"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,EAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,QAEAU,6FCpJ0B0C,EAAQ,GAElCC,CACI,CACIX,IAAK,0CACLY,UAAW,CAAC,YAElBC,KAAK,SAACC,GAIJ,IAOIC,EACAC,EACAC,EATEC,EAAY,CACdH,IAAKI,SAASC,eAAe,OAC7BJ,aAAcG,SAASC,eAAe,gBACtCC,QAASF,SAASC,eAAe,SAOjCE,EAAc,KACdC,EAAoB,KACpBC,EAAc,KACdC,GAAa,EACbC,EAAQ,GAGNC,EAAW,8CACXC,EAAY,CACdC,KAAM,CACFC,MAAO,CAAC,OAAQ,aAAc,OAC9BC,KAAI,GAAAC,OAAKL,EAAL,wBAERM,OAAQ,CACJH,MAAO,CAAC,WACRC,KAAI,GAAAC,OAAKL,EAAL,oBAERO,KAAM,CACFJ,MAAO,CAAC,SAAU,cAAe,WAAY,WAC7CC,KAAI,GAAAC,OAAKL,EAAL,0BAGRQ,EAAU,GACRC,EAAiB,IAAIC,OAAO,kBAGlCC,EAAE,SAASC,MAAM,WACbrB,EAAUG,QAAQmB,UAAW,EACzBlB,GAAaA,MAIrBgB,EAAE,kBAAkBC,MAAM,WACtB,IAAME,EAAQH,EAAEI,MACVC,EAAaF,EAAMG,SAASA,SAC5BC,EAAWJ,EAAMG,SACjBE,EAASL,EAAMP,KAAK,eAE1B,GAAIW,EAASE,SAAS,aAAeD,KAAUlB,GAC3C,OAAO,EAGXL,EAAoBK,EAAUkB,GAAQhB,MACtCN,EAAcI,EAAUkB,GAAQf,KAE5BN,IACAuB,IACAC,IACAC,KAGJP,EAAWQ,KAAK,MAAMC,YAAY,UAClCP,EAASQ,SAAS,YAwBtB,IAAMC,EAAiB,WACnB,IAAMC,EAAQvC,EAAawC,WACvBD,EAAME,UACNhC,GAAa,EACbuB,IACAC,IAEAlC,EAAI2C,MAAMH,EAAME,SAASE,UACzB5C,EAAI6C,QAAQ,IAEZtB,EAAE,QAAQe,SAAS,WACnBH,KAEA/B,SAASC,eAAe,gBAAgByC,YAAc,gBAIxDX,EAAS,WAEN3B,IACDA,EAAoBK,EAAS,OAAWE,OAGvCN,IACDA,EAAcI,EAAS,OAAWG,MAGtC,IAAMmB,EAAS,CACXY,OAAQ/C,EAAIgD,YACZjC,MAAOP,GAGXN,EAAO+C,aAAad,EAAQ,SAAUe,EAASC,EAAQC,GACnD,GAAID,IAAWpD,EAAWG,OAAOmD,oBAAoBC,GAAI,CACrD,IAAIrE,EAAOmC,EAAQ/E,OAAU+E,EAAQ/E,OAAS,EAC1C2B,EAAI,EACRkF,EAAQK,QAAQ,SAACrG,GAGbkE,EAAQnC,GAAO,IAAIc,EAAWyD,OAAO,CACjCC,SAAUvG,EAAOwF,SAASE,SAC1Bc,UAAW3D,EAAW4D,UAAUC,KAChC5C,KAAMP,IAIVoD,WAAWC,EAAW7E,GAAU,IAAJjB,GAI5B+F,EAAU7G,EAAQ+B,GAGlB+E,EAAe5C,EAAQnC,GAAMA,EAAK/B,EAAO+G,UAEzChF,GAAO,EACPjB,GAAK,IAGTmC,EAAUG,QAAQmB,UAAY2B,EAAWc,YACzC3D,EAAc6C,EAAWc,aAAe,WACpCd,EAAWe,iBAGf5C,EAAE,eAAe6C,OAAjB,iEAMNL,EAAY,SAAC7G,EAAQ+B,GAEvB,IASIoF,EATEC,EAASlE,SAASmE,cAAc,OACtCD,EAAOE,UAAUC,IAAI,UAGrBH,EAAOI,QAAU,WACb3E,EAAW4E,MAAMC,QAAQxD,EAAQnC,GAAM,UAM3CoF,EAAU,yDAAApD,OACmB/D,EAAO8D,KAD1B,wCAIVqD,GAAU,8BACVA,GAAU,0BAAApD,OAA8B/D,EAAOgB,KAArC,SACP2G,EAAY3H,EAAO4H,UAClBT,GAAU,uBACVA,GAAU,UAAApD,OAAc4D,EAAY3H,EAAO4H,SAC3CT,GAAU,UAEdA,GAAU,SACVC,EAAOS,UAAYV,EACnB9C,EAAE,eAAe6C,OAAOE,IAGtBO,EAAc,SAACC,GACjB,IAAKA,EAAQ,OAAO,EAGpB,IAFA,IAAIE,EAAM,GAED7I,EAAI,EAAGA,EAAI,EAAGA,IACnB6I,GAAQF,EAAU3I,EAAI,GAAQ,WAAa,WAG/C,OAAO6I,GAILhB,EAAiB,SAACiB,EAAQhG,EAAKiG,GAEjC,IAAMC,EAAa,IAAIpF,EAAWqF,WAAW,CACzCC,SAAU,MAGdtF,EAAW4E,MAAMW,YAAYL,EAAQ,QAAS,WAC1C/E,EAAOqF,WAAW,CAACC,QAASN,GACxB,SAAC1C,EAAOW,GACJ,GAAIA,IAAWpD,EAAWG,OAAOmD,oBAAoBC,GACjD,OAAO,EAEXmC,IACAC,EAAoBzG,GACpB0B,EAAM,GAAKwE,EACXA,EAAWQ,WAAWC,EAAiBpD,IACvC2C,EAAWU,KAAKZ,EAAOa,SAAUb,QAK3CS,EAAsB,SAACzG,GACzB,IAAM8G,EAAWxE,EAAE,eAAea,KAAK,WAGvC,IAAK2D,EAAS1J,OAAQ,OAAO,EAE7B0J,EAAS1D,YAAY,UAErB0D,EAASC,KAAK,SAAU7J,GACpB,GAAIA,IAAM8C,EAAK,CACX,IAAMyC,EAAQH,EAAEI,MACVsE,EAAkB1E,EAAE,eAAeM,SAEzCH,EAAMY,SAAS,UAGf,IAAM4D,EAASxE,EAAM+B,WAAW0C,IAOhC,OAJAF,EAAgBG,QAAQ,CACpBC,UAAWJ,EAAgBI,YAAcH,GAC1C,MAEI,MAMbN,EAAmB,SAACpD,GACtB,IAAI8D,EAAW,2BASf,GARAA,GAAW,sBACXA,GAAW,aAAArF,OAAiBuB,EAAMxB,KAAvB,WAAAC,OAAqCuB,EAAMtE,KAA3C,QACXoI,GAAW,OAAArF,OAAWuB,EAAMtE,KAAjB,SACXoI,GAAe,SAEfA,GAAW,UACXA,GAAW,2BAAArF,OAA+BuB,EAAM+D,SAArC,cAEP/D,EAAMgE,2BAA4B,CAClC,IAAMC,EAAQjE,EAAMgE,2BACpBF,GAAW,sCAAArF,OAA0CwF,EAA1C,MAAAxF,OAAoDwF,EAApD,kBAOf,GAJIjE,EAAMsC,SACNwB,GAAW,0BAAArF,OAA8B4D,EAAYrC,EAAMsC,QAAhD,eAGXtC,EAAMkE,QAAS,CACf,IAAIA,EAAUrF,EAAesF,KAAKnE,EAAMkE,SACxB,OAAZA,IACAA,EAAU,UAAYlE,EAAMkE,QAAU,KAE1CJ,GAAW,6BAAArF,OAAiCyF,EAAjC,iDAMf,OAHAJ,GAAW,WACXA,GAAe,UAMbb,EAAkB,WACpB,IAAK9E,EAAMtE,OAAQ,OAAO,EAC1BsE,EAAM,GAAGiG,IAAI,SAAU,MACvBjG,EAAM,GAAGkG,QACTlG,EAAMtE,OAAS,GAKb4F,EAAe,WACjB,IAAK,IAAI9F,EAAI,EAAGA,EAAIiF,EAAQ/E,OAAQF,IAC5BiF,EAAQjF,IACRiF,EAAQjF,GAAG2K,OAAO,MAG1B1F,EAAU,IAKRc,EAAe,WACjBX,EAAE,eAAewF,KAAK,KAGpBjD,EAAa,SAAC7E,GAChB,OAAO,WACHmC,EAAQnC,GAAK6H,OAAO9G,KAjPxBA,EAAM,IAAID,EAAWiH,IAAI7G,EAAUH,IAAK,CACpCiH,OAAQ,CACJC,IAAK,WACLC,IAAK,YAETC,gBAAgB,EAChBC,YAAY,EACZC,aAAa,EACbC,mBAAmB,EACnBC,KAAM,IAGVvH,EAAe,IAAIF,EAAWG,OAAOuH,aAAatH,EAAUF,aAAc,CACtEc,MAAO,CAAC,cAGZb,EAAS,IAAIH,EAAWG,OAAOwH,cAAc1H,GAC7CC,EAAaqF,YAAY,gBAAiB/C,KAwO/CoF,MAAM,SAAUC,GACfC,QAAQD,MAAMA,GACdrG,EAAE,kBAAkB6C,OAAO","file":"js/app.0de12360.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([26,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import '../styles/index.scss';\r\n\r\nconst loadGoogleMapsApi = require('load-google-maps-api');\r\n\r\nloadGoogleMapsApi(\r\n    {\r\n        key: 'AIzaSyACc7KrutzJRAbkiTOAMuxM568LrJ8XOjE',\r\n        libraries: ['places']\r\n    }\r\n).then((googleMaps) => {\r\n\r\n    //document.querySelector('.map')\r\n    // document selectors\r\n    const selectors = {\r\n        map: document.getElementById('map'),\r\n        autocomplete: document.getElementById('autocomplete'),\r\n        moreBtn: document.getElementById('more')\r\n    };\r\n\r\n    // map & autocomplete definition\r\n    let map;\r\n    let autocomplete;\r\n    let places;\r\n    let getNextPage = null;\r\n    let selectedPlaceType = null;\r\n    let placeMarker = null;\r\n    let placeFound = false;\r\n    let infos = [];\r\n\r\n    // place type definition\r\n    const iconPath = '/Interactive-Frontend-Development/public/1x';\r\n    const placeType = {\r\n        bars: {\r\n            types: ['food', 'restaurant', 'bar'],\r\n            icon: `${iconPath}/map-restaurant.png`\r\n        },\r\n        hotels: {\r\n            types: ['lodging'],\r\n            icon: `${iconPath}/map-hotels.png`\r\n        },\r\n        attr: {\r\n            types: ['museum', 'art_gallery', 'aquarium', 'stadium'],\r\n            icon: `${iconPath}/map-attractions.png`\r\n        }\r\n    };\r\n    let markers = [];\r\n    const hostnameRegexp = new RegExp('^https?://.+?/');\r\n\r\n    // load more results on click\r\n    $('#more').click(() => {\r\n        selectors.moreBtn.disabled = true;\r\n        if (getNextPage) getNextPage();\r\n    });\r\n\r\n    // app navigation\r\n    $('.appNav button').click(function () {\r\n        const _this = $(this);\r\n        const parentList = _this.parent().parent();\r\n        const parentLi = _this.parent();\r\n        const target = _this.attr('data-target');\r\n\r\n        if (parentLi.hasClass('active') || !(target in placeType)) {\r\n            return false;\r\n        }\r\n\r\n        selectedPlaceType = placeType[target].types;\r\n        placeMarker = placeType[target].icon;\r\n\r\n        if (placeFound) {\r\n            clearMarkers();\r\n            clearResults();\r\n            search();\r\n        }\r\n\r\n        parentList.find('li').removeClass('active');\r\n        parentLi.addClass('active');\r\n    });\r\n\r\n    function initMap() {\r\n        map = new googleMaps.Map(selectors.map, {\r\n            center: {\r\n                lat: 53.1976208,\r\n                lng: 16.6152481\r\n            },\r\n            mapTypeControl: false,\r\n            panControl: false,\r\n            zoomControl: false,\r\n            streetViewControl: false,\r\n            zoom: 5\r\n        });\r\n\r\n        autocomplete = new googleMaps.places.Autocomplete(selectors.autocomplete, {\r\n            types: ['(cities)']\r\n        });\r\n\r\n        places = new googleMaps.places.PlacesService(map);\r\n        autocomplete.addListener('place_changed', onPlaceChanged);\r\n    }\r\n\r\n    const onPlaceChanged = () => {\r\n        const place = autocomplete.getPlace();\r\n        if (place.geometry) {\r\n            placeFound = true;\r\n            clearMarkers();\r\n            clearResults();\r\n            // set the map position\r\n            map.panTo(place.geometry.location);\r\n            map.setZoom(15);\r\n            // $('#map').css('opacity', 1);\r\n            $('body').addClass('showMap');\r\n            search();\r\n        } else {\r\n            document.getElementById('autocomplete').placeholder = 'Enter a city';\r\n        }\r\n    };\r\n\r\n    const search = () => {\r\n        // set default value if empty\r\n        if (!selectedPlaceType) {\r\n            selectedPlaceType = placeType['hotels'].types;\r\n        }\r\n\r\n        if (!placeMarker) {\r\n            placeMarker = placeType['hotels'].icon;\r\n        }\r\n        // search configuration\r\n        const search = {\r\n            bounds: map.getBounds(),\r\n            types: selectedPlaceType\r\n        };\r\n\r\n        places.nearbySearch(search, function (results, status, pagination) {\r\n            if (status === googleMaps.places.PlacesServiceStatus.OK) {\r\n                let key = (markers.length) ? markers.length : 0;\r\n                let c = 0;\r\n                results.forEach((result) => {\r\n                    // add marker to the map\r\n\r\n                    markers[key] = new googleMaps.Marker({\r\n                        position: result.geometry.location,\r\n                        animation: googleMaps.Animation.DROP,\r\n                        icon: placeMarker\r\n                    });\r\n\r\n                    // call function to drop the marker\r\n                    setTimeout(dropMarker(key), c * 100);\r\n\r\n\r\n                    // add result navigation\r\n                    addResult(result, key);\r\n\r\n                    // add marker info\r\n                    showInfoWindow(markers[key], key, result.place_id);\r\n\r\n                    key += 1;\r\n                    c += 1;\r\n                });\r\n                // add more results if any\r\n                selectors.moreBtn.disabled = !pagination.hasNextPage;\r\n                getNextPage = pagination.hasNextPage && function () {\r\n                    pagination.nextPage();\r\n                };\r\n            } else {\r\n                $('#resultsNav').append(`<div class=\"noResult error-message\">No results found</div>`);\r\n            }\r\n        });\r\n    };\r\n\r\n    // build result navigation\r\n    const addResult = (result, key) => {\r\n        // create result as clickable button\r\n        const button = document.createElement('div');\r\n        button.classList.add('result');\r\n\r\n        // add clickable event\r\n        button.onclick = () => {\r\n            googleMaps.event.trigger(markers[key], 'click');\r\n        };\r\n\r\n        // create button content\r\n        let btnContent;\r\n\r\n        btnContent = `<div class=\"ico\">\r\n                         <img src=\"${result.icon}\" />\r\n                        </div>`;\r\n\r\n        btnContent += `<div class=\"resultContent\">`;\r\n        btnContent += `<h6 class=\"resultName\">${result.name}</h6>`;\r\n        if(placeRating(result.rating)) {\r\n            btnContent += `<div class=\"rating\">`;\r\n            btnContent += `Rating ${placeRating(result.rating)}`;\r\n            btnContent += `</div>`;\r\n        }\r\n        btnContent += `</div>`;\r\n        button.innerHTML = btnContent;\r\n        $('#resultsNav').append(button);\r\n    };\r\n\r\n    const placeRating = (rating) => {\r\n        if (!rating) return false;\r\n        let out = '';\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            out += (rating < (i + 0.5)) ? '&#10025;' : '&#10029;';\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    // Get the place details. Show the information in an info window,\r\n    const showInfoWindow = (marker, key, placeID) => {\r\n        // const marker = this;\r\n        const windowInfo = new googleMaps.InfoWindow({\r\n            maxWidth: 250,\r\n        });\r\n\r\n        googleMaps.event.addListener(marker, 'click', () => {\r\n            places.getDetails({placeId: placeID},\r\n                (place, status) => {\r\n                    if (status !== googleMaps.places.PlacesServiceStatus.OK) {\r\n                        return false;\r\n                    }\r\n                    closeInfoWindow();\r\n                    highlightNavigation(key);\r\n                    infos[0] = windowInfo;\r\n                    windowInfo.setContent(buildInfoContent(place));\r\n                    windowInfo.open(marker.getMap(), marker);\r\n                });\r\n        });\r\n    };\r\n\r\n    const highlightNavigation = (key) => {\r\n        const navItems = $('#resultsNav').find('.result');\r\n\r\n        // check is empty\r\n        if (!navItems.length) return false;\r\n\r\n        navItems.removeClass('active');\r\n\r\n        navItems.each(function (i) {\r\n            if (i === key) {\r\n                const _this = $(this);\r\n                const scrollContainer = $('#resultsNav').parent();\r\n\r\n                _this.addClass('active');\r\n\r\n                // calculate top position\r\n                const topPos = _this.position().top;\r\n\r\n                // apply the scroll\r\n                scrollContainer.animate({\r\n                    scrollTop: scrollContainer.scrollTop() + topPos\r\n                }, 300);\r\n\r\n                return true;\r\n            }\r\n        });\r\n    };\r\n\r\n    // build info content\r\n    const buildInfoContent = (place) => {\r\n        let infoContent = `<div class=\"infoWindow\">`;\r\n        infoContent += `<div class=\"title\">`;\r\n        infoContent += `<img src=\"${place.icon}\" alt=\"${place.name}\" />`;\r\n        infoContent += `<h6>${place.name}</h6>`;\r\n        infoContent += '</div>';\r\n\r\n        infoContent += `<table>`;\r\n        infoContent += `<tr><th>Address</th><td>${place.vicinity}</td></tr>`;\r\n\r\n        if (place.international_phone_number) {\r\n            const phone = place.international_phone_number;\r\n            infoContent += `<tr><th>Phone</th><td><a href=\"tel:${phone}\">${phone}</a></td></tr>`;\r\n        }\r\n\r\n        if (place.rating) {\r\n            infoContent += `<tr><th>Rating</th><td>${placeRating(place.rating)}</td></tr>`;\r\n        }\r\n\r\n        if (place.website) {\r\n            let website = hostnameRegexp.exec(place.website);\r\n            if (website === null) {\r\n                website = 'http://' + place.website + '/';\r\n            }\r\n            infoContent += `<tr><th></th><td><a href=\"${website}\" target=\"_blank\">Visit website</a></td></tr>`;\r\n        }\r\n\r\n        infoContent += `</table>`;\r\n        infoContent += '</div>';\r\n\r\n        return infoContent;\r\n    };\r\n\r\n    // close the other info windows\r\n    const closeInfoWindow = () => {\r\n        if (!infos.length) return false;\r\n        infos[0].set('marker', null);\r\n        infos[0].close();\r\n        infos.length = 0;\r\n    };\r\n\r\n\r\n    // clear map from markers\r\n    const clearMarkers = () => {\r\n        for (let i = 0; i < markers.length; i++) {\r\n            if (markers[i]) {\r\n                markers[i].setMap(null);\r\n            }\r\n        }\r\n        markers = [];\r\n    };\r\n\r\n\r\n    // clear the navigation\r\n    const clearResults = () => {\r\n        $('#resultsNav').html('');\r\n    };\r\n\r\n    const dropMarker = (key) => {\r\n        return () => {\r\n            markers[key].setMap(map);\r\n        };\r\n    };\r\n\r\n    // fire the app\r\n    initMap();\r\n\r\n\r\n}).catch(function (error) {\r\n    console.error(error);\r\n    $('main.searchApp').append('<div class=\"error-message\">There was a problem with load google maps. Error information you find in console</div>');\r\n});\r\n"],"sourceRoot":""}